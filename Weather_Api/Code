from tkinter import *
import tkinter as tk
from geopy.geocoders import Nominatim
from tkinter import ttk, messagebox
from timezonefinder import TimezoneFinder
from datetime import *
import requests
import pytz
from PIL import Image, ImageTk

root = Tk()
root.title("Weather App")
root.geometry("890x470+300+300")
root.configure(bg = "#57adff")
root.resizable(False, False)

def getWeather():

    try:
        city = text_box.get()

        geolocator = Nominatim(user_agent = "geoapiExercises")
        location = geolocator.geocode(city)
        obg = TimezoneFinder()

        result = obg.timezone_at(lng = location.longitude, lat = location.latitude)

        timezone.config(text = result)
        long_lat.config(text = f"{round(location.latitude, 4)}째N, {round(location.longitude, 4)}째E")

        time = pytz.timezone(result)
        local_time = datetime.now(time)
        current_time = local_time.strftime("%I:%M %p")
        clock.config(text = current_time)

        #api
        api = "https://api.openweathermap.org/data/2.5/weather?q="+city+"&appid=90d5836ee0ec0f5abbcf3f23bc66bd6c"
        json_data = requests.get(api).json()

        #bottom box
        condition = json_data['weather'][0]['main']
        description = json_data['weather'][0]['description']
        temp = int(json_data['main']['temp']-273.15)
        pressure = json_data['main']['pressure']
        humidity = json_data['main']['humidity']
        wind = json_data['wind']['speed']
    
        t.config(text = (temp, "째C"))
        c.config(text = (condition, "|", "Feels", "Like", temp, "째"))
        h.config(text = (humidity, "%"))
        p.config(text = (pressure, "hPa"))
        w.config(text = (wind, "m/s"))
        d.config(text = description)

    except Exception as e:
        messagebox.showerror("Weather App", "Invalid Entry! Please Enter a City.")


#Icons
image_logo = PhotoImage(file = "Images/logo.png")
root.iconphoto(False, image_logo)

#Bottom Box
frame_img = PhotoImage(file = "Images/box.png")
img_frame = Label(image = frame_img, bg = "#1f3145")
img_frame.pack(padx=5,pady=5,side=BOTTOM)

#Label
label2 = Label(root, text = "Humidity", font = ('Montserrat', 15, 'bold'), fg = "white", bg = "#19a0d4")
label2.place(x=300,y=370)

label3 = Label(root, text= "Pressure", font = ('Montserrat', 15, 'bold'), fg = "white", bg = "#19a0d4")
label3.place(x=650,y=370)

label4 = Label(root, text = "Wind Speed", font = ('Montserrat', 15, 'bold'), fg = "white", bg = "#19a0d4")
label4.place(x=120,y=370)

label5 = Label(root, text = "Description", font = ('Montserrat', 15, 'bold'), fg = "white", bg = "#19a0d4")
label5.place(x=480,y=370)

t = Label(font = ("Helvetica", 70, "bold"), bg = "#57adff")
t.place(x=330,y=200)
c = Label(font = ("Helvetica", 15, "bold"), bg = "#57adff")
c.place(x=340,y=300)

w = Label(text = "...", font = ("Helvetica", 20, "bold"), bg = "#19a0d4")
w.place(x=120,y=400)
h = Label(text = "...",font = ("Helvetica", 20, "bold"), bg = "#19a0d4")
h.place(x=300,y=400)
d = Label(text = "...",font = ("Helvetica", 20, "bold"), bg = "#19a0d4")
d.place(x=480,y=400)
p = Label(text = "...",font = ("Helvetica", 20, "bold"), bg = "#19a0d4")
p.place(x=650,y=400)

#Search Box
image_search = PhotoImage(file = "Images/Rounded Rectangle 3.png")
img = Label(image = image_search, bg = "#57adff")
img.place(x=220,y=120)

image_icon = PhotoImage(file = "Images/cloudy.png")
image_icon1 = Label(root, image = image_icon, bg = "#203243")
image_icon1.place(x=250,y=133)

text_box = tk.Entry(root, justify ='center', width = 15, font = ('helvetica', --25, 'bold'), bg = "#203242", border = 0, fg = "white")
text_box.place(x=300,y=130)
text_box.focus()

search_icon = PhotoImage(file = "Images/search (5).png")
img_icon = Button(image = search_icon, borderwidth = 0, cursor = "hand2", bg = "#203243", command = getWeather)
img_icon.place(x=580,y=125)

#Clock
clock = Label(root, font = ("Montserrat", 30, 'bold'), fg = "white", bg = "#57adff")
clock.place(x=30,y=20)

#Timezone
timezone = Label(root, font = ("Montserrat", 20), fg = "white", bg = "#57adff")
timezone.place(x=700,y=20)

long_lat = Label(root, font = ("Montserrat", 10), fg = "white", bg = "#57adff")
long_lat.place(x=700,y=50)

root.mainloop()
